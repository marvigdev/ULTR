import { hash, compare } from 'bcrypt';

/**
 * Encrypts a string using BCrypt.
 *
 * @param data String to be encrypted
 * @returns An encrypted string
 */
async function hashPayload(data: string) {
  const hashedPayload = await hash(data, 10);
  return hashedPayload;
}

/**
 * Compares an encrypted and unencrypted value and checks if they match.
 *
 * @param unencrypted Unencrypted value to be matched against the `ecrypted` param
 * @param encrypted Encrypted value, generated by `hashPayload`
 * @returns A boolean indicating if the unencrypted value matches the encrypted one
 */
async function comparePayload(unencrypted: string, encrypted: string) {
  const doesPayloadMatch = await compare(unencrypted, encrypted);
  return doesPayloadMatch;
}

export { hashPayload, comparePayload };
